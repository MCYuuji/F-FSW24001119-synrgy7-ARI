openapi: 3.0.3
info:
  title: SYNRGY 7 FSW RESTful API Documentation
  description: Documentation by Muhammad Ariyanta Triputro from SYNRGY Batch 7
  contact:
    email: ariyaputro74@gmail.com
  version: '1.0'
servers:
  - url: http://localhost:8000/api/v1
  - url: http://localhost:3000/api/v1
tags:
  - name: auth
    description: Everything about authentication and authorization
  - name: cars
    description: Books CRUD
  - name: users
    description: Users CRUD
paths:
  /login:
    post:
      tags:
        - auth
      summary: Do login
      description: login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: ari@email.com
                password:
                  type: string
                  example: 1234
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: Berhasil Login!
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: ariya
                      email:
                        type: string
                        example: ari@email.com
                      token:
                        type: string
                        example: 13810a0sedu1231.129309a7sd071923.1293u0as7d0as70213
        '401':
          description: Login Failed!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed
                  message:
                    type: string
                    example: Password Salah!
        '404':
          description: Login Failed!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed
                  message:
                    type: string
                    example: Email tidak ditemukan!
  /register:
    post:
      tags:
        - auth
      summary: register user data
      description: register
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@mail.com
                password:
                  type: string
                  example: 1234
                name:
                  type: string
                  example: Budi Abcd
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: Berhasil Register!
        '400':
          description: input data tidak lengkap
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail!
                  message:
                    type: string
                    example: Silahkan input data dengan lengkap!
        '409':
          description: Email sudah terdaftar
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail!
                  message:
                    type: string
                    example: Email sudah terdaftar!
  /whoami:
    get:
      tags:
        - auth
      summary: cek user data
      description: WhoAmI
      operationId: whoami
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: OK
                message: Success
                data:
                  users:
                    name: Admin
                    email: admin@email.com
                    role: admin
  /cars:
    get:
      tags:
        - cars
      summary: Get cars lists
      description: Get cars Lists
      operationId: getCars
      responses:
        '200':
          description: Successful operation
          content:
             application/json:
              schema:
                type: object
              example:
                    - id: 2
                      car_name: Chevrolet Corvette ZR1 2019
                      price: 3000000
                      image: null
                      start_rent: 2023-10-12T17:00:00.000Z
                      finish_rent: 2023-10-31T17:00:00.000Z
                    - id: 4
                      car_name: Honda NSX Type s 2020
                      price: 8000000
                      image: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718019883/rmmhfk97inoqeaxdjbka.jpg
                      start_rent: 2023-12-13T17:00:00.000Z
                      finish_rent: 2024-02-03T17:00:00.000Z
                    - id: 2
                      car_name: Mitsubishi Lancer Evo X 2017
                      price: 4000000
                      image: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718027735/zrjdmn9ugyqv1hnyiljn.jpg
                      start_rent: 2023-11-02T17:00:00.000Z
                      finish_rent: 2023-12-31T17:00:00.000Z
        '404':
          description: Page Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: FAIL!
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 404 Not Found!          
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error!
                  code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Internal Server Error!
      security:
        - auth: []
    post:
      tags:
        - cars
      summary: Add a new cars
      description: Add a new cars
      operationId: addCars
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Buku A
                author:
                  type: string
                  example: Shakespear
                price:
                  type: number
                  example: 50000
                cover:
                  type: string
                  format: binary
                  example: http://www.africau.edu/images/default/sample.pdf
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: number
                    example: 4
                  car_name:
                    type: string
                    example: Honda NSX Type s 2020
                  price: 
                    type: number
                    example: 8000000
                  image: 
                    type: string
                    example: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718019883/rmmhfk97inoqeaxdjbka.jpg
                  start_rent:
                    type: string
                    example: 2023-12-13T17:00:00.000Z
                  finish_rent:
                    type: string
                    example: 2024-02-03T17:00:00.000Z
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail!
                  message:
                    type: string
                    example: Invalid Request
        '401':
          description: Gagal upload files
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail!
                  message:
                    type: string
                    example: Gagal upload files
      security:
        - auth: []
  /cars/{id}:
    get:
      tags:
        - cars
      summary: Get cars by id
      description: Get cars by id
      operationId: getCarsbyID
      parameters:
        - name: ID
          in: query
          description: Cars ID
          required: true
          schema:
            type: number
            default: 1
      responses:
        '200':
          description: Data dapat ditemukan
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    car_name:
                      type: string
                      example: Mitsubishi Lancer Evo X 2017
                    price:
                      type: number
                      example: 4000000
                    image:
                      type: string
                      example: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718027735/zrjdmn9ugyqv1hnyiljn.jpg
        '400':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Data tidak ditemukan
      security:
        - auth: []
    put:
      tags:
        - cars
      summary: Edit cars by id
      description: Edit cars by id
      operationId: UpdateCars
      parameters:
        - name: ID
          in: query
          description: Cars ID
          required: true
          schema:
            type: number
            default: 1
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Buku A
                author:
                  type: string
                  example: Shakespear
                price:
                  type: number
                  example: 50000
                cover:
                  type: string
                  format: binary
                  example: http://www.africau.edu/images/default/sample.pdf
      responses:
        '200':
          description: Data berhasil di update
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    car_name:
                      type: string
                      example: Mitsubishi Lancer Evo X 2017
                    price:
                      type: number
                      example: 5000000
                    image:
                      type: string
                      example: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718027735/zrjdmn9ugyqv1hnyiljn.jpg
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Data tidak ditemukan
        '400':
          description: Gagal upload
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Gagal upload file
      security:
        - auth: []
    delete:
      tags:
        - cars
      summary: delete cars by id
      description: delete cars by id
      operationId: DeleteCars
      parameters:
        - name: ID
          in: query
          description: Cars ID
          required: true
          schema:
            type: number
            default: 1
      responses:
        '200':
          description: Data berhasil di update
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Data berhasil di hapus
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Data tidak ditemukan
      security:
        - auth: []
      
          
  /users:
    get:
      tags:
        - users
      summary: Get users lists
      description: Get users Lists
      operationId: getUsers
      responses:
        '200':
          description: Successful operation
          content:
             application/json:
              schema:
                type: object
              example:
                    - id: 1
                      username: ari
                      email: ari@email.com
                      profile_img: ""
                      role: admin
                      created_by: null
                      updated_by: null
                      created_at: 2023-10-12T17:00:00.000Z
                      updated_at: 2023-10-31T17:00:00.000Z
                    - id: 2
                      username: superadmin
                      email: trueadmin@email.com
                      profile_img: ""
                      role: superadmin
                      created_by: null
                      updated_by: null
                      created_at: 2023-10-12T17:00:00.000Z
                      updated_at: 2023-10-31T17:00:00.000Z
                    - id: 3
                      username: test_user
                      email: test@email.com
                      profile_img: ""
                      role: user
                      created_by: null
                      updated_by: null
                      created_at: 2023-10-12T17:00:00.000Z
                      updated_at: 2023-10-31T17:00:00.000Z
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: UNAUTHORIZED!
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: You cannot access this feature!
        '404':
          description: Page Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: FAIL!
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 404 Not Found!          
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error!
                  code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Internal Server Error!
      security:
        - auth: []
    post:
      tags:
        - users
      summary: Add a new users
      description: Add a new users
      operationId: addUser
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: a@email.com
                password:
                  type: string
                  example: 4321
                username:
                  type: string
                  example: test
                profile_img:
                  type: string
                  format: binary
                  example: http://www.africau.edu/images/default/sample.pdf
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: number
                    example: 4
                  username:
                    type: string
                    example: user4
                  email: 
                    type: string
                    example: user4@email.com
                  profile_img: 
                    type: string
                    example: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718019883/rmmhfk97inoqeaxdjbka.jpg
                  role:
                    type: string
                    example: user
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail!
                  message:
                    type: string
                    example: Invalid Request
        '402':
          description: Gagal upload files
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail!
                  message:
                    type: string
                    example: Gagal upload files
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: UNAUTHORIZED!
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: You cannot access this feature!
      security:
        - auth: []
  /users/{id}:
    get:
      tags:
        - users
      summary: Get users by id
      description: Get users by id
      operationId: getUsersbyID
      parameters:
        - name: ID
          in: query
          description: Users ID
          required: true
          schema:
            type: number
            default: 1
      responses:
        '200':
          description: Data dapat ditemukan
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 3
                    username:
                      type: string
                      example: test_user
                    email:
                      type: string
                      example: test@email.com
                    profile_img:
                      type: string
                      example: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718027735/zrjdmn9ugyqv1hnyiljn.jpg
                    role:
                      type: string
                      example: user
        '400':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Data tidak ditemukan
      security:
        - auth: []
    put:
      tags:
        - users
      summary: Edit users by id
      description: Edit users by id
      operationId: UpdateUsers
      parameters:
        - name: ID
          in: query
          description: Users ID
          required: true
          schema:
            type: number
            default: 1
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: test_user2
                email:
                  type: string
                  example: test2@email.com
                password:
                  type: string
                  example: test
                profile_img:
                  type: string
                  format: binary
                  example: http://www.africau.edu/images/default/sample.pdf
      responses:
        '200':
          description: Data berhasil di update
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 3
                    username:
                      type: string
                      example: test_user
                    email:
                      type: string
                      example: test@email.com
                    profile_img:
                      type: string
                      example: http://res.cloudinary.com/dl1a3nua4/image/upload/v1718027735/zrjdmn9ugyqv1hnyiljn.jpg
                    role:
                      type: string
                      example: admin
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Data tidak ditemukan
        '400':
          description: Gagal upload
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Gagal upload file
      security:
        - auth: []
    delete:
      tags:
        - users
      summary: delete users by id
      description: delete users by id
      operationId: DeleteUser
      parameters:
        - name: ID
          in: query
          description: Users ID
          required: true
          schema:
            type: number
            default: 1
      responses:
        '200':
          description: Data berhasil di update
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Data berhasil di hapus
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Data tidak ditemukan
      security:
        - auth: []
      
          
      
components:
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
